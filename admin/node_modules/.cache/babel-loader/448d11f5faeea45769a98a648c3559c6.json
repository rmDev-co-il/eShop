{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport { getProductFailure, getProductStart, getProductSuccess, deleteProductFailure, deleteProductStart, deleteProductSuccess, updateProductFailure, updateProductStart, updateProductSuccess, addProductFailure, addProductStart, addProductSuccess } from \"./productRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data.toJSON())); // console.log(\"apiCalls res.data: \" + res.data.toJSON())\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    // const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    // update\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};","map":{"version":3,"names":["loginFailure","loginStart","loginSuccess","publicRequest","userRequest","getProductFailure","getProductStart","getProductSuccess","deleteProductFailure","deleteProductStart","deleteProductSuccess","updateProductFailure","updateProductStart","updateProductSuccess","addProductFailure","addProductStart","addProductSuccess","login","dispatch","user","res","post","data","toJSON","err","getProducts","get","deleteProduct","id","updateProduct","product","addProduct"],"sources":["/Users/rmdev/Desktop/eShop/admin/src/redux/apiCalls.js"],"sourcesContent":["import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest, userRequest } from \"../requestMethods\";\nimport {\n    getProductFailure,\n    getProductStart,\n    getProductSuccess,\n    deleteProductFailure,\n    deleteProductStart,\n    deleteProductSuccess,\n    updateProductFailure,\n    updateProductStart,\n    updateProductSuccess,\n    addProductFailure,\n    addProductStart,\n    addProductSuccess,\n} from \"./productRedux\";\n\nexport const login = async (dispatch, user) => {\n    dispatch(loginStart());\n    try {\n        const res = await publicRequest.post(\"/auth/login\", user);\n        dispatch(loginSuccess(res.data.toJSON()))\n        // console.log(\"apiCalls res.data: \" + res.data.toJSON())\n    } catch (err) {\n        dispatch(loginFailure());\n    }\n};\n\nexport const getProducts = async (dispatch) => {\n    dispatch(getProductStart());\n    try {\n        const res = await publicRequest.get(\"/products\");\n        dispatch(getProductSuccess(res.data));\n    } catch (err) {\n        dispatch(getProductFailure());\n    }\n};\n\nexport const deleteProduct = async (id, dispatch) => {\n    dispatch(deleteProductStart());\n    try {\n        // const res = await userRequest.delete(`/products/${id}`);\n        dispatch(deleteProductSuccess(id));\n    } catch (err) {\n        dispatch(deleteProductFailure());\n    }\n};\n\nexport const updateProduct = async (id, product, dispatch) => {\n    dispatch(updateProductStart());\n    try {\n        // update\n        dispatch(updateProductSuccess({ id, product }));\n    } catch (err) {\n        dispatch(updateProductFailure());\n    }\n};\nexport const addProduct = async (product, dispatch) => {\n    dispatch(addProductStart());\n    try {\n        const res = await userRequest.post(`/products`, product);\n        dispatch(addProductSuccess(res.data));\n    } catch (err) {\n        dispatch(addProductFailure());\n    }\n};"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AACA,SACIC,iBADJ,EAEIC,eAFJ,EAGIC,iBAHJ,EAIIC,oBAJJ,EAKIC,kBALJ,EAMIC,oBANJ,EAOIC,oBAPJ,EAQIC,kBARJ,EASIC,oBATJ,EAUIC,iBAVJ,EAWIC,eAXJ,EAYIC,iBAZJ,QAaO,gBAbP;AAeA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;EAC3CD,QAAQ,CAACjB,UAAU,EAAX,CAAR;;EACA,IAAI;IACA,MAAMmB,GAAG,GAAG,MAAMjB,aAAa,CAACkB,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;IACAD,QAAQ,CAAChB,YAAY,CAACkB,GAAG,CAACE,IAAJ,CAASC,MAAT,EAAD,CAAb,CAAR,CAFA,CAGA;EACH,CAJD,CAIE,OAAOC,GAAP,EAAY;IACVN,QAAQ,CAAClB,YAAY,EAAb,CAAR;EACH;AACJ,CATM;AAWP,OAAO,MAAMyB,WAAW,GAAG,MAAOP,QAAP,IAAoB;EAC3CA,QAAQ,CAACZ,eAAe,EAAhB,CAAR;;EACA,IAAI;IACA,MAAMc,GAAG,GAAG,MAAMjB,aAAa,CAACuB,GAAd,CAAkB,WAAlB,CAAlB;IACAR,QAAQ,CAACX,iBAAiB,CAACa,GAAG,CAACE,IAAL,CAAlB,CAAR;EACH,CAHD,CAGE,OAAOE,GAAP,EAAY;IACVN,QAAQ,CAACb,iBAAiB,EAAlB,CAAR;EACH;AACJ,CARM;AAUP,OAAO,MAAMsB,aAAa,GAAG,OAAOC,EAAP,EAAWV,QAAX,KAAwB;EACjDA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;;EACA,IAAI;IACA;IACAS,QAAQ,CAACR,oBAAoB,CAACkB,EAAD,CAArB,CAAR;EACH,CAHD,CAGE,OAAOJ,GAAP,EAAY;IACVN,QAAQ,CAACV,oBAAoB,EAArB,CAAR;EACH;AACJ,CARM;AAUP,OAAO,MAAMqB,aAAa,GAAG,OAAOD,EAAP,EAAWE,OAAX,EAAoBZ,QAApB,KAAiC;EAC1DA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;;EACA,IAAI;IACA;IACAM,QAAQ,CAACL,oBAAoB,CAAC;MAAEe,EAAF;MAAME;IAAN,CAAD,CAArB,CAAR;EACH,CAHD,CAGE,OAAON,GAAP,EAAY;IACVN,QAAQ,CAACP,oBAAoB,EAArB,CAAR;EACH;AACJ,CARM;AASP,OAAO,MAAMoB,UAAU,GAAG,OAAOD,OAAP,EAAgBZ,QAAhB,KAA6B;EACnDA,QAAQ,CAACH,eAAe,EAAhB,CAAR;;EACA,IAAI;IACA,MAAMK,GAAG,GAAG,MAAMhB,WAAW,CAACiB,IAAZ,CAAkB,WAAlB,EAA8BS,OAA9B,CAAlB;IACAZ,QAAQ,CAACF,iBAAiB,CAACI,GAAG,CAACE,IAAL,CAAlB,CAAR;EACH,CAHD,CAGE,OAAOE,GAAP,EAAY;IACVN,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR;EACH;AACJ,CARM"},"metadata":{},"sourceType":"module"}