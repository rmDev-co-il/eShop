{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userRedux\";\nimport productReducer from \"./productRedux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  product: productReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","userReducer","productReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","product","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/Users/rmdev/Desktop/eShop/admin/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userRedux\";\nimport productReducer from \"./productRedux\";\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n    key: \"root\",\n    version: 1,\n    storage,\n};\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    product: productReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({\n            serializableCheck: {\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n            },\n        }),\n});\n\nexport let persistor = persistStore(store);"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,gBAA3B;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MADa;EAElBC,OAAO,EAAE,CAFS;EAGlBH;AAHkB,CAAtB;AAMA,MAAMI,WAAW,GAAGf,eAAe,CAAC;EAChCgB,IAAI,EAAEf,WAD0B;EAEhCgB,OAAO,EAAEf;AAFuB,CAAD,CAAnC;AAKA,MAAMgB,gBAAgB,GAAGd,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMI,KAAK,GAAGpB,cAAc,CAAC;EAChCqB,OAAO,EAAEF,gBADuB;EAEhCG,UAAU,EAAGC,oBAAD,IACRA,oBAAoB,CAAC;IACjBC,iBAAiB,EAAE;MACfC,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADD;EADF,CAAD;AAHQ,CAAD,CAA5B;AAUP,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA5B"},"metadata":{},"sourceType":"module"}